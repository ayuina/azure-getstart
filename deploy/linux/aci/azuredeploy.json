{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dnsPrefix": {
            "type": "string",
            "maxLength": 50,
            "metadata": {
                "description": "The DNS label for the public IP address. It must be lowercase. It should match the following regular expression, or it will raise an error: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$"
            },
            "defaultValue": "containerGroupDnsLabel"
        },
        "webAppImagePath":{
            "type": "string",
            "metadata": {
                "description": "front web application container image"
            },
            "defaultValue": "ayuina/aspnetcore-demoapp:linux"
        },
        "servicePort": {
            "type": "int",
            "metadata": {
                "description": "port number for http listen"
            },
            "defaultValue": 80
        },
        "sqldbConnectionStringKey":{
            "type": "string",
            "metadata": {
                "description": "override ConnectionsString Key on appsettings.json"
            },
            "defaultValue": "ConnectionStrings__connection1"
        },
        "sqldbConnectionString":{
            "type": "string",
            "metadata": {
                "description": "ConnectionsString for backend sql database"
            },
            "defaultValue": "Server=serverName;Database=databaseName;User Id=sqluser;Password=p@ssw0rd;"
        },
        "cpuCores": {
            "type": "string",
            "metadata": {
                "description": "The number of CPU cores to allocate to the container"
            },
            "defaultValue": "1.0"
        },
        "memoryInGb": {
            "type": "string",
            "metadata": {
                "description": "The amount of memory to allocate to the container in gigabytes. Provide a minimum of 2 as he container will include SQL Server and NAV NST"
            },
            "defaultValue": "2.0"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            },
            "allowedValues": [
                "westus","eastus","westeurope","westus2","northeurope","southeastasia"
            ]
        }
    },
    "variables": {
        "ASPNETCORE_URLS":"[concat('http://+:',parameters('servicePort'))]",
        "name":"[concat(parameters('dnsPrefix'),'-cg')]"
    },
    "resources": [
        {
            "name": "[variables('name')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-02-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "containers": [
                    {
                        "name": "[concat(variables('name'), '-web')]",
                        "properties": {
                            "environmentVariables": [
                                {
                                    "name": "ASPNETCORE_URLS",
                                    "value": "[variables('ASPNETCORE_URLS')]"
                                },
                                {
                                    "name": "[parameters('sqldbConnectionStringKey')]",
                                    "value": "[parameters('sqldbConnectionString')]"
                                }
                            ],
                            "image": "[parameters('webAppImagePath')]",
                            "ports": [
                                {
                                    "protocol": "TCP",
                                    "port": "[parameters('servicePort')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "[parameters('cpuCores')]",
                                    "memoryInGB": "[parameters('memoryInGb')]"
                                }
                            }
                        }
                    }
                ],
                "osType": "Linux",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": "[parameters('servicePort')]"
                        }
                    ],
                    "dnsNameLabel": "[parameters('dnsPrefix')]"
                }
            }
        }
    ],
    "outputs": {
        "containerIPAddressFqdn": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', variables('name'))).ipAddress.fqdn]"
        }
    }
}