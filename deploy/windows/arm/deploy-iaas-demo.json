{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string",
            "defaultValue": "demo",
            "metadata": {
                "description": ""
            }
        },
        "month": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": ""
            }
        },
        "day": {
            "type": "int",
            "defaultValue": 4,
            "metadata": {
                "description": ""
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "japaneast",
            "metadata": {
                "description": ""
            }
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "webCount": {
            "type": "int",
            "defaultValue": 4,
            "metadata": {
                "description": ""
            }
        },
        "webSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": ""
            }
        },
        "dbCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": ""
            }
        },
        "dbSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": ""
            }
        }
    },
    "variables": {
        "namePrefix": "[concat(parameters('prefix'), padLeft(parameters('month'), 2, '0') ,padLeft(parameters('day'), 2, '0')) ]",
        "vnetName": "[concat(variables('namePrefix'), '-vnet')]",
        "vnetAddressPrefix": "[concat('10.', parameters('month'),'.',parameters('day'),'.0/24')]",
        "webSubnetAddressPrefix": "[concat('10.', parameters('month'),'.',parameters('day'),'.0/26')]",
        "dbSubnetAddressPrefix": "[concat('10.', parameters('month'),'.',parameters('day'),'.64/26')]",
        "webServerPrefix": "[concat(variables('namePrefix'), '-web')]",
        "dbServerPrefix": "[concat(variables('namePrefix'), '-db')]",
        "lbPrefix": "[concat(variables('namePrefix'), '-lb')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2016-03-30",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "webSubnet",
                        "properties": {
                            "addressPrefix": "[variables('webSubnetAddressPrefix')]"
                        }
                    },
                    {
                        "name": "dbSubnet",
                        "properties": {
                            "addressPrefix": "[variables('dbSubnetAddressPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('lbPrefix'),'-pip')]",
            "apiVersion": "2018-02-01",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "name": "[variables('lbPrefix')]",
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('lbPrefix'), '-pip')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat( variables('lbPrefix'), '-pip') )]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBackEnd"
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe80",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "httpBalancing",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat( resourceId('Microsoft.Network/loadBalancers', variables('lbPrefix')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat( resourceId('Microsoft.Network/loadBalancers', variables('lbPrefix')), '/backendAddressPools/LoadBalancerBackEnd')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat( resourceId('Microsoft.Network/loadBalancers', variables('lbPrefix')), '/probes/tcpProbe80')]"
                            }
                        }
                    }
                ]
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "copy": {
                "name": "lbNatLoop",
                "count": "[parameters('webCount')]"
            },
            "apiVersion": "2018-02-01",
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "name": "[concat(variables('lbPrefix'), '/', 'RDP-NAT', copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('lbPrefix'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat( resourceId('Microsoft.Network/loadBalancers', variables('lbPrefix')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "protocol": "tcp",
                "frontendPort": "[copyIndex(33890)]",
                "backendPort": 3389,
                "enableFloatingIP": false
            }
        },
        {
            "copy": {
                "name": "webniccopy",
                "count": "[parameters('webCount')]"
            },
            "name": "[concat( variables('webServerPrefix'), padLeft(copyIndex(),2,'0'), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('lbPrefix'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('lbPrefix'), '/inboundNatRules/RDP-NAT', copyIndex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[concat( resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/webSubnet')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbPrefix')), '/backendAddressPools/LoadBalancerBackend') ]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbPrefix')), '/inboundNatRules/RDP-NAT', copyindex()) ]"
                                }
                            ],
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[resourceGroup().location]",
            "name": "[concat( variables('webServerPrefix'), '-as')]",
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "copy": {
                "name": "webvmcopy",
                "count": "[parameters('webCount')]"
            },
            "name": "[concat( variables('webServerPrefix'), padLeft(copyIndex(),2,'0')  )]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('webServerPrefix'), padLeft(copyIndex(),2,'0'), '-nic')]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('webServerPrefix'), '-as')]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat( variables('webServerPrefix'), padLeft(copyIndex(),2,'0') )]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('webSku')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat( variables('webServerPrefix'), padLeft(copyIndex(),2,'0'), '-osdisk' )]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('webServerPrefix'), padLeft(copyIndex(),2,'0'), '-nic') )]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat( variables('webServerPrefix'), '-as') )]"
                }
            }
        },
        {
            "copy": {
                "name": "dbniccopy",
                "count": "[parameters('dbCount')]"
            },
            "name": "[concat( variables('dbServerPrefix'), padLeft(copyIndex(),2,'0'), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[concat( resourceGroup().id, '/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/dbSubnet')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[resourceGroup().location]",
            "name": "[concat( variables('dbServerPrefix'), '-as')]",
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "copy": {
                "name": "dbvmcopy",
                "count": "[parameters('dbCount')]"
            },
            "name": "[concat( variables('dbServerPrefix'), padLeft(copyIndex(),2,'0')  )]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('dbServerPrefix'), padLeft(copyIndex(),2,'0'), '-nic')]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('dbServerPrefix'), '-as')]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat( variables('dbServerPrefix'), padLeft(copyIndex(),2,'0') )]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('dbSku')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat( variables('dbServerPrefix'), padLeft(copyIndex(),2,'0'), '-osdisk' )]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('dbServerPrefix'), padLeft(copyIndex(),2,'0'), '-nic') )]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat( variables('dbServerPrefix'), '-as') )]"
                }
            }
        }
    ],
    "outputs": {}
}